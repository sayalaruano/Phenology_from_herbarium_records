scientificname = NA,
scientificnamewithauthors = NA,
family = NA,
rankabbreviation = NA,
nomenclaturestatusname = paste0(" homonyms: (", NROW(nomes.busca.tp1),") ", homonyms),
author = NA,
displayreference = NA,
displaydate = NA,
totalrows = NA,
stringsAsFactors = FALSE)
return(tropicos.name)
}
}
}
# Invalido ou rejeitado, recarregar registros para testar nomes válidos
if (NROW(nomes.busca.tp1)==0)
{
nomes.busca.tp1 <- tp_search(name = as.character(scientificnamewithoutauthors),
key = key.tp,
type =  "exact")
index.tp <- nomes.busca.tp1$rankabbreviation %in% c("gen.", "fam.", "sect.", "var.", "subsp.","fo.","cv.", "ser.")
nomes.busca.tp1 <- nomes.busca.tp1[!index.tp, colunas.res]
# Invalido ou rejeitado
if (nomes.busca.tp1$nomenclaturestatusname %in% c("Invalid") == TRUE)
{
tropicos.name <- data.frame(
nameid = NA,
scientificname = NA,
scientificnamewithauthors = NA,
family = NA,
rankabbreviation = NA,
nomenclaturestatusname = "invalid or rejected name",
author = NA,
displayreference = NA,
displaydate = NA,
totalrows = NA,
stringsAsFactors = FALSE)
return(tropicos.name)
}
}
# verificando se há mais nomes aceitos
accnames.tp <-  tp_accnames(id = nomes.busca.tp1$nameid, key = key.tp )$acceptednames
id.accnames.tp <- unique(accnames.tp$nameid)
# mais de um nome aceito
if (length(id.accnames.tp)>=1 & scientificnamewithauthors == '')
{
nomes.accept <- as.character(nomes.busca.tp1$scientificnamewithauthors)
x = unique(accnames.tp[accnames.tp$nameid %in% id.accnames.tp, c("scientificname") ])
for (i in x)
{ nomes.accept <- paste0(nomes.accept, "; " ,as.character(i))}
tropicos.name <- data.frame(
nameid = NA,
scientificname = NA,
scientificnamewithauthors = NA,
family = NA,
rankabbreviation = NA,
nomenclaturestatusname = paste0(length(id.accnames.tp)+1, " names accepted: ", nomes.accept),
author = NA,
displayreference = NA,
displaydate = NA,
totalrows = NA,
stringsAsFactors = FALSE)
return(tropicos.name)
}
# quando informar autor para separar homonimos
if (length(id.accnames.tp)>=1 & scientificnamewithauthors != '')
{
nomes.busca.tp1 <- nomes.busca.tp1[nomes.busca.tp1$scientificnamewithauthors == scientificnamewithauthors,]
if (NROW(nomes.busca.tp1)==0)
{
tropicos.name <- data.frame(
nameid = NA,
scientificname = NA,
scientificnamewithauthors = NA,
family = NA,
rankabbreviation = NA,
nomenclaturestatusname = "No scientificname with authors were found",
author = NA,
displayreference = NA,
displaydate = NA,
totalrows = NA,
stringsAsFactors = FALSE)
return(tropicos.name)
}
}
return(nomes.busca.tp1)
}
check.names.tropicos(c("Acalypha diversifolia"), '')
check.names.tropicos(df, '')
df[1,:]
df[:,1]
df
df[1]
df[1,]
tp_search(df[1,])
test <- tp_search(df[1,])
test
test
View(test)
test$scientificnamewithauthors
test$scientificnamewithauthors[1]
tp_search(df[1,], 1)
tp_search(df[1,], orderby=1)
tp_search(df[1,])
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
View(df_authnames)
# Create an index for the original names
index = 1
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
index <- index+1
}
}
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
}
}
View(temp)
temp <- tp_search(df[,1])
df[1,]
temp <- tp_search(df[1,])
temp
temp$scientificnamewithauthors[1]
name_with_auth <- temp$scientificnamewithauthors[1]
is_empty(name_with_auth)
df_authnames <- rbind(df_authnames, name_with_auth)
View(df_authnames)
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
}
}
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
}
}
View(df_authnames)
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
print(i)
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
}
}
tp_search(df[,6])
tp_search(df[6,])
tp_search(df[5,])
# Function to create new dataframe
insertRow <- function(data, new_row, r) {
data_new <- rbind(data[1:r, ],
new_row,
data[- (1:r), ])
rownames(data_new) <- 1:nrow(data_new)
return(data_new)
}
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
print(i)
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
}
}
print("hello", "world")
print("hello"+"world")
print("hello")
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
# Create an index for the original names
index = 1
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
index <- index+1
print(i)
print(index)
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
index <- index+1
}
}
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
# Create an index for the original names
index = 0
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
index <- index+1
print(i)
print(index)
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
index <- index+1
}
}
View(df)
View(df)
df_authnames <- insertRow(df_authnames,
"Aegiphila lopez-palacii var. pubescens Moldenke", 5)
View(df_authnames)
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
# Create an index for the original names
index = 0
for(i in df["Scientific_names"][1:444,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
index <- index+1
print(i)
print(index)
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
index <- index+1
}
}
test <- insertRow(df_authnames, c("Aegiphila lopez-palacii var. pubescens Moldenke"),
4)
NROW(df)
nrow(df)
# Function to create new dataframe
insert_row <- function(df, row, index) {
new_Row <- row
long <- nrow(df)
new_Data<- rbind(df[1:index,], new_Row ,df[(index + 1):(long),])
return(new_Data)
}
# Function to create new dataframe
insertRow <- function(df, row, index) {
new_Row <- row
long <- nrow(df)
new_Data<- rbind(df[1:index,], new_Row ,df[(index + 1):(long),])
return(new_Data)
}
test <- insertRow(df_authnames, c("Aegiphila lopez-palacii var. pubescens Moldenke"),
4)
View(test)
test <- rbind(df_authnames[1:4,],
"Aegiphila lopez-palacii var. pubescens Moldenke",
df_authnames[ 5,])
View(test)
test <- rbind(df_authnames[1:4,],
c("Aegiphila lopez-palacii var. pubescens Moldenke"),
df_authnames[ 5,])
test <- rbind(df_authnames[1:4,],
c("Aegiphila lopez-palacii var. pubescens Moldenke"),
df_authnames[ -(1:4),])
test <- NA
test <- rbind(df_authnames[1:4,],
c("Aegiphila lopez-palacii var. pubescens Moldenke"),
df_authnames[ -(1:4),])
test <- rbind(df_authnames[1:4,],
Aegiphila lopez-palacii var. pubescens Moldenke,
df_authnames[ -(1:4),])
new_row <- c("Aegiphila lopez-palacii var. pubescens Moldenke")
test <- rbind(df_authnames[1:4,],
new_row,
df_authnames[ -(1:4),])
new_row <- c("Aegiphila lopez-palacii var. pubescens Moldenke")
test2 <- data.frame(append(unclass(df_authnames), as.data.frame(new_row), after = 4))
View(test2)
test <- insertRow(df_authnames, new_row, 4)
# Function to create new dataframe
insertRow <- function(df, row, index) {
new_Row <- row
long <- nrow(df)
new_Data<- rbind(df[1:index,], new_Row ,df[(index + 1):(long),])
return(data.frame(new_Data))
}
test <- insertRow(df_authnames, new_row, 4)
View(test)
df_authnames
class(df_authnames)
# Export data
write_csv(df_authnames, "../List_species/List_all_species_withauth_phenology_proj_UDLA2022_def.csv")
colnames(df_authnames) <- c("Scientific_name_auth")
View(df_authnames)
# Export data
write_csv(df_authnames, "../List_species/List_all_species_withauth_phenology_proj_UDLA2022_def.csv")
# Load data
df <- read.csv("List_50_species_phenology_proj_UDLA2022_with_synonyms.csv")
View(df)
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
# Create an index for the original names
index = 0
View(df)
for(i in df["Scientific_names"][1:235,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
index <- index+1
print(i)
print(index)
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
index <- index+1
}
}
View(df_authnames)
colnames(df_authnames) <- c("Scientific_name_auth")
# Export data
write_csv(df_authnames, "List_50_species_withauth_and_synonyms_phenology_proj_UDLA2022_def.csv")
View(df_authnames)
# Export data
write_csv(df_authnames, "List_50_species_withauth_and_synonyms_phenology_proj_UDLA2022_def.csv")
View(df_authnames)
duplicated(df_authnames)
duplicated(df_authnames)sum()
duplicated(df_authnames).sum()
sum(duplicated(df_authnames))
# Import libraries
library(taxize)
library(tidyverse)
# Load data
df <- read.csv("List_all_species_phenology_proj_UDLA2022_with_synonyms.csv")
# Create an empty df
df_authnames <- data.frame(Scientific_name_auth=character())
# Create an index for the original names
index = 0
for(i in df["Scientific_names"][1:2908,]) {
# Obtain the record inf from tropicos
temp <- tp_search(i)
# Extract scientific name with authors
name_with_auth <- temp$scientificnamewithauthors[1]
# Condition to validate that exists a scientific name with authors
if(is_empty(name_with_auth) == TRUE){
index <- index+1
print(i)
print(index)
next
}else{
# Append scientific name with authors to the complete list
df_authnames <- rbind(df_authnames, name_with_auth)
index <- index+1
}
}
# Import libraries
library(taxize)
library(tidyverse)
# Load data
df <- read.csv("List_all_species_withauth_phenology_proj_UDLA2022_def_tnrs.csv")
View(df)
df[1:,]
df[1,:]
df[1,]
synonyms(df[1,], db = "tropicos", 1)
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
synonyms(df[1,], db = "tropicos", 1)
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Create a column for the number of synonyms
df[, "Number_of_synonyms"] <- NA
# Create a dataframe for original names and synonyms
df_synonyms <- df["Scientific_names", "Original_names"]
# Create a dataframe for original names and synonyms
df_synonyms <- df["Scientific_names"]
# Create a dataframe for original names and synonyms
df_synonyms <- df[c("Scientific_names", "Original_names")]
df_synonyms[, "Original_names"] <- NA
View(df_synonyms)
df_synonyms <- df["Scientific_names"]
df_synonyms[, "Original_names"] <- df["Scientific_names"]
View(df_synonyms)
temp <- synonyms(df[1,], db = "tropicos", 1)
temp <- synonyms(df[1, ], db = "tropicos", 1)
df[1,]
df[1:,]
df[1,]
df[1,1]
temp <- synonyms(df[1,1], db = "tropicos", 1)
temp
synonyms <- synonyms_df(temp)
synonyms
View(synonyms)
len(synonyms)
lenght(synonyms)
length(synonyms)
length(synonyms["scientificname"])
nrows(synonyms)
nrow(synonyms)
test <- rep(df[1,1], each=nrow(synonyms))
test
# Load data
df <- read.csv("../List_species/List_all_species_phenology_proj_UDLA2022_filtered_def.csv")
# Create a column for the number of synonyms
df[, "Number_of_synonyms"] <- NA
# Create a dataframe for original names and synonyms
df_synonyms <- df["Scientific_names"]
df_synonyms[, "Original_names"] <- df["Scientific_names"]
# Create an index for the original names
index = 1
for(i in df["Scientific_names"][1:438,]) {
# Obtain the synonyms with taxize
temp <- synonyms(i, db = "tropicos", 1)
# Convert list into a dataframe
synonyms <- synonyms_df(temp)
# Condition to validate that exists synonyms or not
if(is_empty(synonyms) == TRUE){
df[index, "Number_of_synonyms"] <- 0
index <- index+1
next
}else{
# Extract only the scientific name of synonyms
names_synonyms <- synonyms["scientificname"]
# Create a df of the size of syn with the orig name
names_synonyms["Original_names"] <- rep(i, each=nrow(names_synonyms))
# Change column names
colnames(names_synonyms) <- c("Scientific_names", "Original_names")
# Add number of synonyms
df[index, "Number_of_synonyms"] <- nrow(names_synonyms)
# Append synonyms to the complete list
df_synonyms <- rbind(df_synonyms, names_synonyms)
index <- index+1
}
}
View(df)
View(df_synonyms)
# Export data
write_csv(df, "List_all_species_phenology_proj_UDLA2022_number_synonyms.csv")
write_csv(df_synonyms, "List_all_species_phenology_proj_UDLA2022_with_synonyms.csv")
